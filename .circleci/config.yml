version: 2.1
orbs:
  slack: circleci/slack@4.3.0
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    environment:
      branch_url: << pipeline.project.git_url >>/tree/<< pipeline.git.branch >>
      commit_url: << pipeline.project.git_url >>/commit/<< pipeline.git.revision >>
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm i
            npm run build
            echo "export COMMIT_MESSAGE=\"$(git log --pretty=format:%s -n 1 --abbrev-commit)\"" >> $BASH_ENV
            echo "export COMMIT_SHA=\"$(git log --pretty=format:%d -n 1 --abbrev-commit)\"" >> $BASH_ENV
      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Build Fail ! :red_circle:",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Failed in build $CIRCLE_PULL_REQUESTS of <$REPO_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>(<${branch_url}|$CIRCLE_BRANCH>)\n Build No: <$CIRCLE_BUILD_URL|$CIRCLE_BUILD_NUM> \n - ${COMMIT_MESSAGE} <${commit_url}|${COMMIT_SHA}> \n"
                }
              }
            ]
            }
      - slack/notify:
          custom: |
            {
              "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Build Success ! :large_green_circle: ",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Success in build $CIRCLE_PULL_REQUESTS of <$REPO_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>(<${branch_url}|$CIRCLE_BRANCH>)\n Build No: <$CIRCLE_BUILD_URL|$CIRCLE_BUILD_NUM> \n - ${COMMIT_MESSAGE} <${commit_url}|${COMMIT_SHA}> \n"
                }
              }
            ]
            }
          event: pass
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm i
            npm run build
            echo "export COMMIT_MESSAGE=\"$(git log --abbrev-commit --abbrev=1 --oneline)\"" >> $BASH_ENV
      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Build Fail ! :red_circle:",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Failed in build $CIRCLE_PULL_REQUESTS of <$REPO_URL|*$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME*>(<${branch_url}|$CIRCLE_BRANCH>)\n *Build No*: <$CIRCLE_BUILD_URL|$CIRCLE_BUILD_NUM> \n *Commit* : <${commit_url}|${COMMIT_MESSAGE}> \n"
                }
              }
            ]
            }
      - slack/notify:
          custom: |
            {
              "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Build Success ! :large_green_circle: ",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Build Success $CIRCLE_PULL_REQUESTS of <$REPO_URL|*$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME*>(<${branch_url}|$CIRCLE_BRANCH>)\n Build No: *<$CIRCLE_BUILD_URL|$CIRCLE_BUILD_NUM>* \n Commit : *<${commit_url}|${COMMIT_MESSAGE}>* \n"
                }
              }
            ]
            }
          event: pass
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [test-frontend]
      - run:
          name: frontend test
          command: |
            cd frontend
            npm i
            npm i oauth-sign 
            npm run test
                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [test-backend]
      - run:
          name: backend test
          command: |
            cd backend
            npm i
            npm i oauth-sign
            npm run test

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scan-frontend]
      - run:
          name: frontend scan
          command: |
            cd frontend
            npm audit --audit-level=critical --force

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scan-backend]
      - run:
          name: backend scan
          command: |
            cd backend
            npm audit --audit-level=critical --force

workflows:
  default:
    jobs:
      - build-frontend
      # - build-backend
      # - test-frontend:
      #     requires: [build-frontend]
      # - test-backend:
      #     requires: [build-backend]
      # - scan-frontend:
      #     requires: [build-frontend]
      # - scan-backend:
      #     requires: [build-backend]
