version: 2.1
orbs:
  slack: circleci/slack@4.3.0
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    environment:
      branch_url: << pipeline.project.git_url >>/tree/<< pipeline.git.branch >>
      commit_url: << pipeline.project.git_url >>/commit/<< pipeline.git.revision >>
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm i
            npm run build
            echo "export COMMIT_MESSAGE=\"$(git log --format=oneline -n 1 --abbrev-commit)\"" >> $BASH_ENV
            cd ..
            echo "export BUILD_SUCCESS_TEMPLATE=$(cat message_templates/build_success.json)" >> $BASH_ENV
      - slack/notify:
          event: pass
          template: $test_template
          channel: C01NF23KWTZ
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "This is Pass notification",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: fail
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [test-frontend]
      - run:
          name: frontend test
          command: |
            cd frontend
            npm i
            npm i oauth-sign 
            npm run test
                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [test-backend]
      - run:
          name: backend test
          command: |
            cd backend
            npm i
            npm i oauth-sign
            npm run test

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scan-frontend]
      - run:
          name: frontend scan
          command: |
            cd frontend
            npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [scan-backend]
      - run:
          name: backend scan
          command: |
            cd backend
            npm audit --audit-level=critical --force

workflows:
  default:
    jobs:
      - build-frontend
      # - build-backend
      # - test-frontend:
      #     requires: [build-frontend]
      # - test-backend:
      #     requires: [build-backend]
      # - scan-frontend:
      #     requires: [build-frontend]
      # - scan-backend:
      #     requires: [build-backend]
